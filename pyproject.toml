[tool.poetry]
name = "searchright-technical-assignment"
version = "0.1.0"
description = ""
authors = ["Nuung <qlgks1@naver.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"
psycopg2-binary = "^2.9.10"
openai = "^1.75.0"
fastapi = "^0.116.1"
sqlalchemy = "^2.0.42"
pgvector = "^0.4.1"
alembic = "^1.16.4"
asyncpg = "^0.30.0"
dependency-injector = "^4.48.1"
pydantic-settings = "^2.10.1"
uvicorn = "^0.35.0"
python-multipart = "^0.0.20"
llama-index-core = "^0.13.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-mock = "^3.14.1"
black = "^25.1.0"
pytest-asyncio = "^1.1.0"
ruff = "^0.12.8"
isort = "^6.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.pytest.ini_options]
pythonpath = ["src"]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = "-v -rA --strict-markers --cov=src --cov-report=term-missing"
markers = [
    "asyncio: marks tests as async (deselect with '-m \"not asyncio\"')"
]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["yourpkg"]
combine_as_imports = true
force_single_line = false
